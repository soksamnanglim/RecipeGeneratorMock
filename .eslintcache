[{"/Users/luckylim/app/meal-planner/src/index.js":"1","/Users/luckylim/app/meal-planner/src/App.js":"2","/Users/luckylim/app/meal-planner/src/MealList.js":"3","/Users/luckylim/app/meal-planner/src/Meal.js":"4","/Users/luckylim/app/meal-planner/src/RecipeList.js":"5","/Users/luckylim/app/meal-planner/src/RecipeListItem.js":"6","/Users/luckylim/app/meal-planner/src/UiRecipe.js":"7"},{"size":219,"mtime":1620161989305,"results":"8","hashOfConfig":"9"},{"size":3634,"mtime":1620670164408,"results":"10","hashOfConfig":"9"},{"size":705,"mtime":1620184317656,"results":"11","hashOfConfig":"9"},{"size":830,"mtime":1620161989305,"results":"12","hashOfConfig":"9"},{"size":648,"mtime":1620670082998,"results":"13","hashOfConfig":"9"},{"size":1693,"mtime":1620333801895,"results":"14","hashOfConfig":"9"},{"size":1560,"mtime":1620335287107,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ybdbh",{"filePath":"19","messages":"20","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/Users/luckylim/app/meal-planner/src/index.js",[],["34","35"],"/Users/luckylim/app/meal-planner/src/App.js",["36","37","38","39","40","41","42","43","44"],"/Users/luckylim/app/meal-planner/src/MealList.js",["45"],"import React, { useState } from \"react\";\nimport Meal from \"./Meal\";\n\nexport default function MealList({ mealData }) {\n  const nutrients = mealData.nutrients;\n\n  return (\n    <main>\n      <section className=\"nutrients\">\n        <h1>Macros</h1>\n        <ul>\n          <li>Calories: {nutrients.calories.toFixed(0)}</li>\n          <li>Carbohydrates: {nutrients.carbohydrates.toFixed(0)}</li>\n          <li>Fat: {nutrients.fat.toFixed(0)}</li>\n          <li>Protein: {nutrients.protein.toFixed(0)}</li>\n        </ul>\n      </section>\n\n      <section className=\"meals\">\n        {mealData.meals.map((meal) => {\n          return <Meal key={meal.id} meal={meal} />;\n        })}\n      </section>\n    </main>\n  );\n}\n","/Users/luckylim/app/meal-planner/src/Meal.js",[],"/Users/luckylim/app/meal-planner/src/RecipeList.js",["46","47","48"],"/Users/luckylim/app/meal-planner/src/RecipeListItem.js",["49","50","51","52","53"],"import React, { useState, useEffect } from \"react\";\nimport fs from 'fs';\nimport UiRecipe from './UiRecipe';\nexport default function RecipeListItem({ recipe, getId }) {\n  const {\n    id,\n    image,\n    title,\n    usedIngredientCount,\n    missedIngredientCount, å\n  } = recipe;\n\n  const onTrigger = (event) => {\n    getId(recipe.id);\n    event.preventDefault();\n  }\n\n  // function getRecipeInfo() {\n  //   fetch(`https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${id}/information`, {\n  //     \"method\": \"GET\",\n  //     \"headers\": {\n  //       \"x-rapidapi-key\": \"621409563cmshab64d51a4e7a120p11b940jsn5305e86310da\",\n  //       \"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\"\n  //     }\n  //   })\n  //     .then((response) => response.json())\n  //     .then((resp) => {\n  //       setRecipeInfo(resp);\n  //       const data = JSON.stringify(resp, null, 4);\n  //       fs.writeFile(\"sample.json\", data, (err) => {\n  //         if (err) {\n  //           throw err;\n  //         }\n  //         console.log(\"JSON data saved.\");\n  //       });\n  //     })\n  //     .catch(err => {\n  //       console.error(err);\n  //     });\n  // }\n\n  return (\n    <article>\n      <h1>{title}</h1>\n      <img src={image} alt=\"recipe\" />\n      <ul className=\"instructions\">\n        <li>{id}</li>\n        <li>Ingredients used: {usedIngredientCount}</li>\n        <li>Ingredients missed: {missedIngredientCount}</li>\n      </ul>\n      {recipe && <button onClick={onTrigger}> More information</button>}\n      {/* {clicked && function () {\n        return <UiRecipe id={id} />\n      }} */}\n      {/* { recipeInfo && <UiRecipe recipeInfo={recipeInfo} />} */}\n    </article >\n  );\n}\n","/Users/luckylim/app/meal-planner/src/UiRecipe.js",["54","55","56"],"import React, { useState, useEffect } from 'react';\n\nclass UiRecipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.recipeId,\n      data: null,\n      imageUrl: null,\n      title: null,\n      vegetarian: null\n    }\n  }\n\n  getRecipeInfo() {\n    fetch(`https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${this.id}/information`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"621409563cmshab64d51a4e7a120p11b940jsn5305e86310da\",\n        \"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\"\n      }\n    })\n      .then((response) => response.json())\n      .then((resp) => {\n        this.setState({ data: resp, imageUrl: resp.image, title: resp.title, vegetarian: resp.vegetarian });\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  render() {\n    this.getRecipeInfo();\n\n    return (\n      <article>\n        <h1> {this.state.id}</h1>\n        <h1>{this.state.title}</h1>\n        <img src={this.state.imageUrl} alt=\"recipe image\" />\n        { (this.state.vegetarian) && <h2>Vegetarian: {this.vegetarian}</h2>}\n        <h2>Ingredients</h2>\n        {/* <h2>\n        {extendedIngredients.map((ingredient) => {\n          <ul>\n            <img src={ingredient.image} alt=\"ingredient\" />\n            <li>{ingredient.name}</li>\n            <li>{ingredient.amount} {ingredient.unit}</li>\n          </ul>\n        })}\n      </h2> */}\n        {/* <h2>{instructions}</h2> */}\n      </article >\n    );\n  }\n}\n\nexport default UiRecipe;",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":16},{"ruleId":"61","severity":1,"message":"65","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":18},{"ruleId":"61","severity":1,"message":"66","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":10},{"ruleId":"61","severity":1,"message":"67","line":8,"column":10,"nodeType":"63","messageId":"64","endLine":8,"endColumn":18},{"ruleId":"61","severity":1,"message":"68","line":9,"column":10,"nodeType":"63","messageId":"64","endLine":9,"endColumn":16},{"ruleId":"61","severity":1,"message":"69","line":10,"column":10,"nodeType":"63","messageId":"64","endLine":10,"endColumn":30},{"ruleId":"61","severity":1,"message":"70","line":25,"column":10,"nodeType":"63","messageId":"64","endLine":25,"endColumn":20},{"ruleId":"61","severity":1,"message":"71","line":26,"column":10,"nodeType":"63","messageId":"64","endLine":26,"endColumn":17},{"ruleId":"61","severity":1,"message":"72","line":51,"column":9,"nodeType":"63","messageId":"64","endLine":51,"endColumn":22},{"ruleId":"61","severity":1,"message":"73","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"74","line":6,"column":10,"nodeType":"63","messageId":"64","endLine":6,"endColumn":17},{"ruleId":"61","severity":1,"message":"75","line":6,"column":19,"nodeType":"63","messageId":"64","endLine":6,"endColumn":29},{"ruleId":"61","severity":1,"message":"76","line":7,"column":10,"nodeType":"63","messageId":"64","endLine":7,"endColumn":18},{"ruleId":"61","severity":1,"message":"73","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"77","line":1,"column":27,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},{"ruleId":"61","severity":1,"message":"66","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":10},{"ruleId":"61","severity":1,"message":"78","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":16},{"ruleId":"61","severity":1,"message":"79","line":10,"column":28,"nodeType":"63","messageId":"64","endLine":10,"endColumn":29},{"ruleId":"61","severity":1,"message":"73","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"77","line":1,"column":27,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":39,"column":9,"nodeType":"82","endLine":39,"endColumn":61},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'MealList' is defined but never used.","Identifier","unusedVar","'RecipeList' is defined but never used.","'fs' is defined but never used.","'isBuffer' is defined but never used.","'render' is defined but never used.","'isCompositeComponent' is defined but never used.","'recipeInfo' is assigned a value but never used.","'clicked' is assigned a value but never used.","'getRecipeInfo' is assigned a value but never used.","'useState' is defined but never used.","'recipes' is assigned a value but never used.","'setRecipes' is assigned a value but never used.","'recipeId' is assigned a value but never used.","'useEffect' is defined but never used.","'UiRecipe' is defined but never used.","'å' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]